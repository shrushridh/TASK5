# -*- coding: utf-8 -*-
"""Untitled12.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15c3MduHRQsxgOYcNLtivEnNk4ttyBS2G

Ground Cricket Chirps


In The Song of Insects (1948) by George W. Pierce, Pierce mechanically measured the frequency (the number of wing vibrations per second) of chirps (or pulses of sound) made by a striped ground cricket, at various ground temperatures. Since crickets are ectotherms (cold-blooded), the rate of their physiological processes and their overall metabolism are influenced by temperature. Consequently, there is reason to believe that temperature would have a profound effect on aspects of their behavior, such as chirp frequency.

In general, it was found that crickets did not sing at temperatures colder than 60ยบ F. or warmer than 100ยบ F.
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
# %matplotlib inline

ground_cricket_data = {"ChirpsperSecond": [20.0, 16.0, 19.8, 18.4, 17.1, 15.5, 14.7,
                                         15.7, 15.4, 16.3, 15.0, 17.2, 16.0, 17.0,
                                         14.4],
                       "GroundTemperature": [88.6, 71.6, 93.3, 84.3, 80.6, 75.2, 69.7,
                                              71.6, 69.4, 83.3, 79.6, 82.6, 80.6, 83.5,
                                              76.3]}
df = pd.DataFrame(ground_cricket_data)
df

df.describe()

df.plot(x='GroundTemperature',y='ChirpsperSecond', style="o")
plt.title('Ground Temperature vs Chirps per Second')
plt.xlabel('Ground Temperature')
plt.ylabel('Chirps per Second')
plt.show()

df.corr()

df['GroundTemperature']=df['GroundTemperature'].to_frame()
df['ChirpsperSecond']=df['ChirpsperSecond'].to_frame()
df['GroundTemperature']

X = df['GroundTemperature']
X = X.to_frame()
y = df['ChirpsperSecond']

from sklearn import linear_model
linreg = linear_model.LinearRegression()
linreg.fit(X, y)
print('intercept:', linreg.intercept_)
print('coefficient:', linreg.coef_)

plt.scatter(X, y, color='blue')
plt.plot(X, linreg.predict(X), color='limegreen')

"""**EXTRAPOLATE**"""

i=float(input())
p=linreg.predict([[i]])
z=int(p.round())
print("If the ground temperature reached ",str(i)," we can expect crickets to be chirping at", str(z)," 20 chirps per sec")

"""**INTERPOLATE**"""

m=float(input())
c=(m - linreg.intercept_) / linreg.coef_
o=int(c.round())
print("If the crickets were chirping at a rate of ",str(m)," chirps per second. then the approximate ground temperature that morning would be 86 degrees")
